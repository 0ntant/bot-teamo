version: '1'
services:
  rabbit-mq:
    container_name: rabbit-mq
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    networks:
      - internal_net
    ports:
      - '15672:15672'
      - '5672:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  database:
    container_name: database
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    networks:
      - internal_net
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d teamo_db"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  img-generator:
    container_name: img-generator
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./img-generator
      dockerfile: Dockerfile
    networks:
      - internal_net
    ports:
      - '8090:8080'
    depends_on:
      rabbit-mq:
        condition: service_healthy

  content-storage-service:
    container_name: content-storage-service
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./content-storage-service
      dockerfile: Dockerfile
    networks:
      - internal_net
    depends_on:
      database:
         condition: service_healthy
      rabbit-mq:
         condition: service_healthy
    ports:
      - '8081:8080'

  red-queen:
    container_name: red-queen
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./red-queen
      dockerfile: Dockerfile
    networks:
      - internal_net
    depends_on:
      database:
         condition: service_healthy
      rabbit-mq:
         condition: service_healthy
    ports:
      - '8080:8080'


networks:
  internal_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.101.0/24
